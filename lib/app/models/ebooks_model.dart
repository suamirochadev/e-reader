// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: type=lint
import 'dart:convert';

class EbooksModel {
  EbooksModel({
    required this.id,
    required this.title,
    required this.author,
    required this.coverUrl,
    required this.downloadUrl,
  });

  final int id;
  final String title;
  final String author;
  final String coverUrl;
  final String downloadUrl;

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'title': title,
      'author': author,
      'cover_url': coverUrl,
      'download_url': downloadUrl,
    };
  }

  EbooksModel copyWith({
    int? id,
    String? title,
    String? author,
    String? cover_url,
    String? download_url,
  }) {
    return EbooksModel(
      id: id ?? this.id,
      title: title ?? this.title,
      author: author ?? this.author,
      coverUrl: cover_url ?? this.coverUrl,
      downloadUrl: download_url ?? this.downloadUrl,
    );
  }

  factory EbooksModel.fromMap(Map<String, dynamic> map) {
     T cast<T>(String k) => map[k] is T ? map[k] as T : throw ArgumentError.value(map[k], k, '$T ‚Üê ${map[k].runtimeType}');
    return EbooksModel(
      id: cast<num>('id').toInt(),
      title: cast<String>('title'),
      author: cast<String>('author'),
      coverUrl: cast<String>('cover_url'),
      downloadUrl: cast<String>('download_url'),
    );
  }

  String toJson() => json.encode(toMap());

  factory EbooksModel.fromJson(String source) => EbooksModel.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() {
    return 'EbooksModel(id: $id, title: $title, author: $author, cover_url: $coverUrl, download_url: $downloadUrl)';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;

    return other is EbooksModel &&
        other.id == id &&
        other.title == title &&
        other.author == author &&
        other.coverUrl == coverUrl &&
        other.downloadUrl == downloadUrl;
  }

  @override
  int get hashCode {
    return id.hashCode ^
        title.hashCode ^
        author.hashCode ^
        coverUrl.hashCode ^
        downloadUrl.hashCode;
  }
}
